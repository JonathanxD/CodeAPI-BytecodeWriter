md5: cd19f7965035257f3988cc7681a8a227

version: Java 8 (52)
access: ACC_PUBLIC (33)

source: TryWithResourcesTestClass.cai

public class test.TryWithResourcesTestClass extends java.lang.Object {

    !access: ACC_PUBLIC (1)
    public void <init>() {
      desc: ()V 
      maxStack: 2, maxLocals: 6 
      Label_0:
        aload 0
        invokespecial java.lang.Object.<init>()void (ownerIsInterface: false)
        new com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm
        dup
        invokespecial com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm.<init>()void (ownerIsInterface: false)
      Label_1:
        astore 1
        aconst_null
      Label_2:
        astore 2
      Label_3:
       LINE 1 -> Label_3
        aload 1
        invokevirtual com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm.read()void (ownerIsInterface: false)
      Label_4:
        aload 1
        ifnull Label_21
        aload 2
        ifnull Label_10
      Label_5:
        aload 1
        invokeinterface java.lang.AutoCloseable.close()void (ownerIsInterface: true)
      Label_6:
        return
      Label_7:
       FRAME[type: F_FULL, locals: 3, local: {Reference[test.TryWithResourcesTestClass], Reference[com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm], Primitive[null]}, stacks: 1, stack: {Reference[java.lang.Throwable]}]
        astore 3
        aload 2
        aload 3
        invokevirtual java.lang.Throwable.addSuppressed(java.lang.Throwable)void (ownerIsInterface: false)
      Label_8:
        return
      Label_9:
       FRAME[type: F_FULL, locals: 0, local: {}, stacks: 1, stack: {Reference[java.lang.Throwable]}]
        athrow
      Label_10:
       FRAME[type: F_APPEND, locals: 3, local: {Reference[test.TryWithResourcesTestClass], Reference[com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm], Primitive[null]}, stacks: 0, stack: {}]
        aload 1
        invokeinterface java.lang.AutoCloseable.close()void (ownerIsInterface: true)
      Label_11:
        return
      Label_12:
       FRAME[type: F_SAME1, locals: 0, local: {}, stacks: 1, stack: {Reference[java.lang.Throwable]}]
        astore 3
        aload 3
        astore 2
        aload 3
        athrow
      Label_13:
       FRAME[type: F_FULL, locals: 3, local: {Reference[test.TryWithResourcesTestClass], Reference[com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm], Reference[java.lang.Throwable]}, stacks: 1, stack: {Reference[java.lang.Throwable]}]
        astore 4
        aload 1
        ifnull Label_20
        aload 2
        ifnull Label_19
      Label_14:
        aload 1
        invokeinterface java.lang.AutoCloseable.close()void (ownerIsInterface: true)
      Label_15:
        goto Label_20
      Label_16:
       FRAME[type: F_FULL, locals: 5, local: {Reference[test.TryWithResourcesTestClass], Reference[com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm], Reference[java.lang.Throwable], Primitive[top], Reference[java.lang.Throwable]}, stacks: 1, stack: {Reference[java.lang.Throwable]}]
        astore 5
        aload 2
        aload 5
        invokevirtual java.lang.Throwable.addSuppressed(java.lang.Throwable)void (ownerIsInterface: false)
      Label_17:
        goto Label_20
      Label_18:
       FRAME[type: F_FULL, locals: 0, local: {}, stacks: 1, stack: {Reference[java.lang.Throwable]}]
        nop
        nop
        athrow
      Label_19:
       FRAME[type: F_FULL, locals: 5, local: {Reference[test.TryWithResourcesTestClass], Reference[com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm], Reference[java.lang.Throwable], Primitive[top], Reference[java.lang.Throwable]}, stacks: 0, stack: {}]
        aload 1
        invokeinterface java.lang.AutoCloseable.close()void (ownerIsInterface: true)
      Label_20:
       FRAME[type: F_SAME, locals: 0, local: {}, stacks: 0, stack: {}]
        aload 4
        athrow
      Label_21:
       FRAME[type: F_FULL, locals: 3, local: {Reference[test.TryWithResourcesTestClass], Reference[com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm], Primitive[null]}, stacks: 0, stack: {}]
        return
      Label_22:
      TryCatchBlocks {
        start: Label_3, end: Label_9, handler: Label_12, exception: java.lang.Throwable
        start: Label_10, end: Label_11, handler: Label_12, exception: java.lang.Throwable
        start: Label_5, end: Label_6, handler: Label_7, exception: java.lang.Throwable
        start: Label_3, end: Label_4, handler: Label_13, exception: null
        start: Label_12, end: Label_13, handler: Label_13, exception: null
        start: Label_14, end: Label_15, handler: Label_16, exception: java.lang.Throwable
      }
      LocalVariables {
        index: 5, name: $catch_2_, start: Label_16, end: Label_17, type: java.lang.Throwable, signature: null
        index: 4, name: $catch_2_, start: Label_13, end: Label_13, type: java.lang.Throwable, signature: null
        index: 3, name: $catch_2_, start: Label_7, end: Label_8, type: java.lang.Throwable, signature: null
        index: 3, name: $catch_, start: Label_12, end: Label_13, type: java.lang.Throwable, signature: null
        index: 2, name: $throwable_, start: Label_2, end: Label_22, type: java.lang.Throwable, signature: null
        index: 1, name: trm, start: Label_1, end: Label_22, type: com.github.jonathanxd.codeapi.test.TryWithResourcesTest_$Trm, signature: null
        index: 0, name: this, start: Label_0, end: Label_22, type: test.TryWithResourcesTestClass, signature: null
      }
    }
    
    !access: PACKAGE_PRIVATE, ACC_STATIC (8)
    static void <clinit>() {
      desc: ()V 
      maxStack: 0, maxLocals: 0 
        return
    }
    
}